# Entra√Ænement d'un mod√®le 

Lien vers le d√©p√¥t d'entraiement : [https://github.com/InseeFrLab/satellite-images-train]().

## üöÄ D√©marrage rapide

### 1. Cloner et configurer l'environnement

```bash
git clone https://github.com/InseeFrLab/satellite-images-train.git
cd satellite-images-train
uv sync
uv run pre-commit install
```

### 2. Lancer en local

D√©finissez les param√®tres d'entra√Ænement puis ex√©cutez :

```bash
bash bash/mlflow-run.sh
```

L'ensemble de l'ex√©cution sera automatiquement enregistr√© dans MLflow.


### 3. Lancer avec Argo Workflows ‚òÅÔ∏è

1. Mettez √† jour les param√®tres dans argo-workflows/train-workflow.yaml `argo-workflows/train-workflow.yaml`.
2. Soumettez le workflow via l'interface CLI ou l'interface graphique Argo en copier/collant le template:

```bash
argo submit argo-workflows/train-workflow.yaml
```

## üß† Configuration du mod√®le

Le pipeline d'entra√Ænement est construit avec PyTorch et con√ßu pour √™tre flexible :

- **Architectures** : `deeplabv3`, `segformer-b[0‚Äì5]`, `single_class_deeplabv3`
- **Fonctions de perte**: Cross-Entropy (avec diff√©rentes variantes), BCE, BCE avec logits
- **Schedulers**: `reduce_on_plateau`, `one_cycle`, etc.
- **Sources des labels**: `BDTOPO`, `COSIA` ou autres.

De nouveaux mod√®les peuvent √™tre impl√©menter en rajoutant le code dans `src/models/components/segmentation_models.py`.
Les fonctions de perte sont d√©finies dans `src/config/loss.py` et les schedulers dans `src/config/scheduling.py`.
En ce qui concerne les annotations, cela se joue dans le [d√©pot de preprocessing](https://github.com/InseeFrLab/satellite-images-preprocess)


## üìà L'utilisation de MLflow 

Le script `src/train.py` int√®gre d√©j√† MLflow, et chaque exp√©rimentation est automatiquement enregistr√©e et visualisable via l‚Äô[interface graphique MLflow](https://projet-slums-detection-mlflow.user.lab.sspcloud.fr/).

Lors de l'ex√©cution d'une exp√©rimentation, assurez-vous que la variable d'environnement `MLFLOW_TRACKING_URI` est correctement d√©finie afin que les logs soient stock√©s au bon endroit. Gr√¢ce √† `mlflow.pytorch.autolog()`, les principaux √©l√©ments (param√®tres, m√©triques, artefacts, etc.) sont logu√©s automatiquement. Si besoin, vous pouvez d√©sactiver l'autologging pour enregistrer manuellement uniquement les informations jug√©es essentielles.

Une fois vos exp√©rimentations r√©alis√©es, vous pouvez les comparer facilement en les s√©lectionnant dans l‚Äôinterface puis en cliquant sur `Compare`. MLflow vous permet alors d'analyser visuellement les m√©triques obtenues en fonction des hyperparam√®tres utilis√©s.

::: {.callout-tip}
## üîÅ Promotion d‚Äôun mod√®le vers la production

Voici la proc√©dure pour enregistrer un mod√®le performant dans le **Model Registry**, puis le d√©ployer :

1. Identifiez une exp√©rimentation satisfaisante, puis cliquez sur le nom du run associ√© pour acc√©der √† ses d√©tails.
2. Cliquez sur `Register model` pour enregistrer le mod√®le.
3. Choisissez le registre appropri√© (`Segmentation` ou `Segmentation-multiclass`) ou cr√©ez un nouveau registre si n√©cessaire.
4. Ajoutez un tag et/ou un alias pour votre mod√®le. L‚Äôalias peut √™tre utilis√©, comme la version, pour charger le mod√®le depuis le Model Registry.
5. Rendez-vous sur le [d√©p√¥t GitOps](https://github.com/InseeFrLab/satellite-images-cd) (ou clonez-le si ce n‚Äôest pas d√©j√† fait).
6. Modifiez les [lignes appropri√©es](https://github.com/InseeFrLab/satellite-images-cd/blob/main/deployment-api/deployment.yaml#L41-L44) pour indiquer le nom et la version du mod√®le √† d√©ployer, puis effectuez un commit.
7. Connectez-vous √† [ArgoCD](https://projet-slums-detection-argo-cd.user.lab.sspcloud.fr/) et v√©rifiez que l‚Äôapplication `satellite-images-api` a bien √©t√© mise √† jour. Sinon, cliquez sur `Refresh`.

:::


::: {.callout-note}
## üõ†Ô∏è Am√©liorations techniques possibles

Am√©lioration technique sont envisageables :

- Ajouter une signature du mod√®le MLflow
- Adapter le parsing des listes pour simplifier le CLI.
- Utiliser `*args` et `**kwargs` pour r√©duire le nombre de param√®tres de la fonction.

:::

